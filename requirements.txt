

1)The management of your window must remain smooth: changing to another win- dow, minimizing, etc.

2) Display different wall textures (the choice is yours) that vary depending on which side the wall is facing (North, South, East, West).

3) Your program must be able to set the floor and ceiling colors to two different ones.

4)The program displays the image in a window and respects the following rules:
◦ The left and right arrow keys of the keyboard must allow you to look left and
right in the maze.
◦ The W, A, S, and D keys must allow you to move the point of view through the maze.
◦ Pressing ESC must close the window and quit the program cleanly.
◦ Clicking on the red cross on the window’s frame must close the window and
quit the program cleanly.
◦ The use of images of the minilibX is strongly recommended.


> LEFT / RIGHT -> LOOK (LEFT AND RIGHT)
> W / A / S / D -> MOVE 
> ESC
> X SU WINDOW

5) Your program must take as a first argument a scene description file with the .cub extension.

> .CUB EXTENSION

6) The map must be composed of only 6 possible characters: 0 for an empty space, 1 for a wall, and N,S,E or W for the player’s start position and spawning orientation.

> ACCEPTABLE CHARS:
    > 0           ( EMPTY space )
    > 1           ( WALL )
    > N, S, E, W  ( PLAYER STARTING POSITION )

7) The map must be closed/surrounded by walls, if not the program must return an error.

8) Except for the map content, each type of element can be separated by one or more empty line(s).

> EVERY ELEMENT CAN BE DIVIDED BY 1 OR MORE EMPTY LINES

9)Except for the map content which always has to be the last, each type of element can be set in any order in the file.

> MAP CONTENT ALWAYS HAS TO BE THE LAST
> EACH OTHER ELEMENT CAN BE IN ANY ORDER

10)Except for the map, each type of information from an element can be separated by one or more space(s).
> EACH TYPE OF INFORMATION OF AN ELEMENT CAN BE SEPARATED BY ONE OR MORE SPACE

11) The map must be parsed as it looks in the file. Spaces are a valid part of the map and are up to you to handle. You must be able to parse any kind of map, as long as it respects the rules of the map.

> MAP CONTENT:
    ->Spaces are a valid part of the map
        ->up to you to handle (GUESS THEY CAN BECAME WALLS)

12) Each element (except the map) firsts information is the type identifier (com- posed by one or two character(s)), followed by all specific informations for each object in a strict order such as :

> FOR EACH ELEMENT:
    >FIRST INFORMATION IS THE TYPE IDENTIFIER (ONE OR MORE CHARS)
    >followed by all specific informations for each object in a strict order.
        if (NO) then  ./path_to_the_north_texture
        if (SO) then  ./path_to_the_south_texture
        if (WE) then  ./path_to_the_west_texture
        if (EA) then  ./path_to_the_east_texture
        if (F) then  R,G,B colors in range [0,255]: 0, 255, 255
            example: ->> 20,100,0
        if (C) then   R,G,B colors in range [0,255]: 0, 255, 255
            example: ->> 225,30,0


13) If any misconfiguration of any kind is encountered in the file, the program must exit properly and return "Error\n" followed by an explicit error message of your choice.

> if (any misconfiguration of any kind)
    > return "Error\n" followed by an explicit error message